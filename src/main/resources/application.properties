spring.application.name=CalenderGPT

# ===== OpenAI Settings =====
openai.model=gpt-3.5-turbo

openai.api.key=${OPENAI_API_KEY}
openai.api.url=https://api.openai.com/v1/chat/completions
openai.max-completions=1
openai.temperature=0

# ===== Spring Security OAuth2 (Google) =====
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,profile,email,https://www.googleapis.com/auth/calendar,https://www.googleapis.com/auth/contacts.readonly

# Spring Security OAuth2: dynamic redirect URI על־פי baseUrl
#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/api/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.redirect-uri=https://ec2-stage.calendargpt.org/api/login/oauth2/code/{registrationId}



#spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}



# ===== Google API Credentials =====
google.api.credentials.file=src/main/resources/credentials.json



# Database connection (match docker-compose POSTGRES_DB)

spring.datasource.url=jdbc:postgresql://node128.codingbc.com:7878/bars_project
spring.datasource.username=postgres
spring.datasource.password=Nov2017890#
spring.datasource.driver-class-name=org.postgresql.Driver

# חשוף רק את ה־health ו־info ל-web
management.endpoints.web.exposure.include=health,info

# JPA
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

jwt.privateKeyPath=/keys/private_key.pem
jwt.publicKeyPath=/keys/public_key.pem
jwt.expirationMinutes=120

spring.jpa.properties.hibernate.validator.apply_to_ddl=false
spring.thymeleaf.enabled=false


springdoc.api-docs.path=/api/v3/api-docs
springdoc.swagger-ui.path=/api/swagger-ui
springdoc.swagger-ui.config-url=/api/v3/api-docs/swagger-config
springdoc.swagger-ui.url=/api/v3/api-docs

server.forward-headers-strategy=framework
server.tomcat.remoteip.remote-ip-header = X-Forwarded-For
server.tomcat.remoteip.protocol-header   = x-forwarded-proto
server.tomcat.remoteip.host-header       = Host
server.servlet.session.cookie.secure=true 
server.use-forward-headers=true


spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE