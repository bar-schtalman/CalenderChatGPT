name: Build and Deploy

on:
  push:
    branches:
      - master   # דמוי הדוגמה: רץ רק על master

env:
  # תגית גרסה עם קאונטר ריצה (לצד latest)
  APP_VERSION: v1.${{ github.run_number }}
  IMAGE_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/calendergpt

jobs:
  build:
    name: Build & Push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven (skip tests)
        run: mvn -B -ntp clean package -DskipTests

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push (mutable + immutable tags)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ env.IMAGE_REPO }}:${{ env.APP_VERSION }}
            ${{ env.IMAGE_REPO }}:latest

  deploy:
    name: Deploy to EC2
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: SSH & deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -euo pipefail
            set -x

            WORKDIR="${{ secrets.EC2_COMPOSE_DIR }}"
            cd "$WORKDIR"

            test -f docker-compose.yml || { echo "ERROR: docker-compose.yml not found in $PWD"; exit 1; }

            # פרמטרים מה-Workflow
            IMAGE_REPO='${{ env.IMAGE_REPO }}'
            APP_VERSION='${{ env.APP_VERSION }}'
            FULL_TAG="${IMAGE_REPO}:${APP_VERSION}"

            echo "==> יעד הפריסה: ${FULL_TAG}"

            echo "==> כתיבת .env לסודות (אם בשימוש ב-compose)"
            cat > .env <<EOF
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
            GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
            EOF

            echo "==> כתיבת מפתחות JWT ל- /opt/calendargpt/keys"
            sudo install -d -m 700 /opt/calendargpt/keys
            sudo bash -lc 'cat > /opt/calendargpt/keys/private_key.pem << "EOF"
            ${{ secrets.JWT_PRIVATE_KEY_PEM }}
            EOF
            chmod 600 /opt/calendargpt/keys/private_key.pem'
            sudo bash -lc 'cat > /opt/calendargpt/keys/public_key.pem << "EOF"
            ${{ secrets.JWT_PUBLIC_KEY_PEM }}
            EOF
            chmod 644 /opt/calendargpt/keys/public_key.pem'

            echo "==> docker login (אם צריך)"
            if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ] && [ -n "${{ secrets.DOCKERHUB_TOKEN }}" ]; then
              echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
            fi

            echo "==> עדכון docker-compose.yml לתגית הספציפית (sed)"
            # מחליף כל tag אחרי <repo>: לטאג הספציפי; תופס גם עם וגם בלי מרכאות
            sed -i -E "s|(image:\s*[\"']?${IMAGE_REPO}:)[^\"']+|\1${APP_VERSION}|g" docker-compose.yml

            echo "==> DOWN (וניקוי יתומים)"
            docker compose down --remove-orphans

            echo "==> PULL (יביא את התגית המעודכנת מה-compose)"
            docker compose pull

            echo "==> UP (יש לך healthcheck ל-Postgres, אז --wait יעבוד מצוין)"
            docker compose up -d --wait

            echo "==> ניקוי אימג׳ים לא בשימוש"
            docker image prune -af || true

            echo "==> סטטוס"
            docker compose ps
            docker compose images || true

            echo "==> בדיקת בריאות מקומית"
            curl -fsS http://127.0.0.1:8080/api/health || true
